<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ANvC5jU//DI/AAAAAElFTkSuQmCC
</value>
  </data>
</root>